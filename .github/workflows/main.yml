name: Servlet CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:9.0
        env:
          MYSQL_DATABASE: comp_3940
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      
      - name: Compile Java Servlet
        run: |
          mkdir -p build/classes
          CLASSPATH=$(find WEB-INF/lib -name "*.jar" | tr '\n' ':')
          javac -d build/classes -classpath "$CLASSPATH" WEB-INF/classes/*.java
          
          
      - name: Package into WAR file
        run: |
          mkdir -p build/webapp/WEB-INF/classes
          cp -r build/classes/* build/webapp/WEB-INF/classes
          cp -r WEB-INF/lib build/webapp/WEB-INF/
          cp -r WEB-INF/web.xml build/webapp/WEB-INF/ 
          cd build && jar -cvf quizapp.war -C webapp .

      - name: Upload WAR file (just for checking)
        uses: actions/upload-artifact@v4
        with:
          name: quizapp-war
          path: build/quizapp.war
          
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/quizapp:latest .
  
      - name: Push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/quizapp:latest

      - name: Clean up Docker image
        run: |
          docker rmi ${{ secrets.DOCKER_USERNAME }}/quizapp:latest